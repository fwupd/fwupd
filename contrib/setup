#!/bin/bash -e
# Setup the repository and local system for development

cd "$(dirname "$0")/.."

HELPER=./contrib/ci/fwupd_setup_helpers.py
HELPER_ARGS="-y"

rename_branch()
{
    OLD=master
    NEW=main
    if git log $OLD >/dev/null 2>&1 &&
       git remote get-url origin 2>&1 | grep fwupd/fwupd.git >/dev/null 2>&1; then
        read -p "Rename existing $OLD branch to $NEW? (y/N) " question
        if [ "$question" = "y" ]; then
            git branch -m $OLD $NEW
            git fetch origin
            git branch -u origin/$NEW $NEW
            git remote set-head origin -a
        fi
    fi
}

setup_deps()
{
    read -p "Install build dependencies? (y/N) " question
    if [ "$question" = "y" ]; then
        $(which sudo) python3 $HELPER install-dependencies $HELPER_ARGS -y
    fi
}

setup_run_wrappers()
{
    BASE=../../contrib/
    BIN=venv/bin/
    TEMPLATE=${BASE}/launch-venv.sh
    # launch wrappers
    for F in fwupdtool fwupdmgr fwupd; do
        rm -f ${BIN}/${F}
        ln -s $TEMPLATE ${BIN}/${F}
    done
    # build wrapper
    rm -f ${BIN}/build-fwupd
    ln -s ${BASE}/build-venv.sh ${BIN}/build-fwupd
}

setup_vscode()
{
    # Add default vscode settings and debug launcher
    SOURCED=./contrib/vscode
    TARGETD=./.vscode
    SETTINGS_F=settings.json
    LAUNCH_F=launch.json
    for f in $SETTINGS_F $LAUNCH_F; do
        TEMPLATE=${SOURCED}/${f}
        TARGETF=${TARGETD}/${f}
        mkdir -p ${TARGETD}
        echo "Copy ${TEMPLATE} to ${TARGETF}."
        cp "${TEMPLATE}" "${TARGETF}"
    done
}

setup_git()
{
    echo "Configuring git environment"
    git config include.path ../.gitconfig
}

install_pip()
{
    package=$1
    args=$2
    if ! python3 -m pip install $package $args; then
        $(which sudo) python3 $HELPER install-pip $HELPER_ARGS -y
    fi
    #try once more
    python3 -m pip install $package
}

setup_virtualenv()
{
    echo "Setting up virtualenv"
    install_pip virtualenv
    virtualenv --system-site-packages venv --prompt fwupd
    source venv/bin/activate
    cat >> venv/bin/activate << EOF
echo "To build or rebuild fwupd within development environment run:"
echo ""
echo "# build-fwupd"
echo ""
echo "To run any tool under gdbserver add DEBUG=1 to env, for example:"
echo ""
echo "# DEBUG=1 fwupdtool get-devices"
echo ""
echo "To leave fwupd development environment run:"
echo ""
echo "# deactivate"
EOF
}

setup_precommit()
{
    echo "Configuring pre-commit hooks"
    install_pip pre-commit
    pre-commit install
}

setup_prepush()
{
    read -p "Run tests locally before pushing to remote branches? THIS WILL SLOW DOWN EVERY PUSH but reduce the risk of failing CI. (y/N) " question
    if [ "$question" = "y" ]; then
        pre-commit install -t pre-push
    else
        pre-commit uninstall -t pre-push
    fi
}

check_markdown()
{
    python3 $HELPER test-markdown
}

check_jinja2()
{
    python3 $HELPER test-jinja2
}

check_meson()
{
    python3 $HELPER test-meson
}

detect_os()
{
    for i in "$@"; do
        case $i in
            --os=*)
                OS="${i#*=}"
                shift
                ;;
            --debug)
                DEBUG=1
                shift
                ;;
            *)
                ;;
        esac
    done
    if [ -z $OS ]; then
        OS=$(python3 $HELPER detect-profile)
        if [ -z "$OS" ]; then
            install_pip distro
            OS=$(python3 $HELPER detect-profile)
        fi
        echo "Using OS profile $OS to setup"
    fi
    if [ -n "$OS" ];then
        HELPER_ARGS="$HELPER_ARGS --os $OS"
    fi
    if [ -n "$DEBUG" ]; then
        set -x
        HELPER_ARGS="$HELPER_ARGS --debug"
    fi
}

#needed for arguments for some commands
detect_os "$@"

#if interactive install build deps and prepare environment
if [ -t 2 ]; then
    case $OS in
        debian|ubuntu|arch|fedora)
            setup_deps
            ;;
        void)
            setup_deps
            ;;
    esac
    rename_branch
fi
setup_virtualenv
setup_run_wrappers
check_markdown
check_jinja2
setup_vscode
setup_git
check_meson
setup_precommit

#needs to be after pre-commit is sourced
if [ -t 2 ]; then
    setup_prepush
fi

echo ""
echo "To enter fwupd development environment run:"
echo ""
echo "# source venv/bin/activate"
echo ""
