on:
  workflow_call:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    needs: library
    strategy:
      fail-fast: false
      matrix:
        os: [fedora, debian-x86_64, arch, debian-i386]
    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - name: Docker login
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Download tarball
        if: matrix.os == 'fedora'
        uses: actions/download-artifact@9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395 # v4.1.6
        id: download
        with:
          name: tarball
      - name: Build in container
        env:
          CI_NETWORK: true
          CI: true
          VERSION: ${{ needs.library.outputs.version }}
        run: |
          docker run --privileged -e CI_NETWORK=$CI_NETWORK -e CI=$CI -e VERSION=$VERSION -t -v $GITHUB_WORKSPACE:/github/workspace docker.pkg.github.com/fwupd/fwupd/fwupd-${{matrix.os}}:latest
      - name: Save any applicable artifacts
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: ${{ matrix.os }}
          path: ${{ github.workspace }}/dist/*
          if-no-files-found: ignore
      - name: Test in container
        env:
          CI_NETWORK: true
          CI: true
        run: |
          docker run --privileged -e CI=true -t -v $GITHUB_WORKSPACE:/github/workspace docker.pkg.github.com/fwupd/fwupd/fwupd-${{matrix.os}}:latest contrib/ci/${{matrix.os}}-test.sh
      - name: Coveralls
        if: matrix.os == 'debian-x86_64' || matrix.os == 'debian-i386'
        uses: coverallsapp/github-action@3dfc5567390f6fa9267c0ee9c251e4c8c3f18949 # v2.2.3
        with:
          flag-name: run-${{ join(matrix.*, '-') }}
          parallel: true

  finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Close parallel build
        uses: coverallsapp/github-action@3dfc5567390f6fa9267c0ee9c251e4c8c3f18949 # v2.2.3
        with:
          parallel-finished: true
          carryforward: "run-debian-i386,run-debian-x86_64"

  openbmc:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - name: Refresh dependencies
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt update
      - name: Install dependencies
        run: |
          sudo ./contrib/ci/fwupd_setup_helpers.py install-dependencies -o ubuntu --yes
          sudo ./contrib/ci/fwupd_setup_helpers.py test-meson
      - name: Build
        run: |
          ./contrib/build-openbmc.sh --prefix=/home/runner/.root

  library:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - name: Refresh dependencies
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt update
      - name: Install dependencies
        run: |
          sudo ./contrib/ci/fwupd_setup_helpers.py install-dependencies -o ubuntu --yes
          sudo ./contrib/ci/fwupd_setup_helpers.py test-meson
      - name: Build
        run: |
          meson setup build \
                      -Dbuild=library \
                      -Ddocs=disabled \
                      -Dman=false \
                      -Dauto_features=disabled \
                      -Dtests=false
          ninja -C build dist
      - name: Save version
        id: version
        run: |
          echo "version=$(meson introspect build --projectinfo | jq -r .version)" >> $GITHUB_OUTPUT
      - name: Save tarball
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: tarball
          path: ${{ github.workspace }}/build/meson-dist/*xz

  macos:
    runs-on: macos-12
    steps:
    - name: install dependencies
      run: |
        brew install meson libgusb gobject-introspection sqlite libarchive json-glib curl gnutls protobuf-c vala gi-docgen
        python3 -m pip install --user jinja2
    - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
    - name: configure
      run: ./contrib/ci/build_macos.sh
    - name: build
      run: ninja -C build-macos
