/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: device_attestation.proto */

#ifndef PROTOBUF_C_device_5fattestation_2eproto__INCLUDED
#define PROTOBUF_C_device_5fattestation_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

typedef struct Logi__Device__Proto__GetCertificateChainRequest
    Logi__Device__Proto__GetCertificateChainRequest;
typedef struct Logi__Device__Proto__GetCertificateChainResponse
    Logi__Device__Proto__GetCertificateChainResponse;

/* --- enums --- */

/* --- messages --- */

/*
 **
 * Request for certificate chain
 * This is to be included in UsbMsg
 * EXPECTED RESPONSE
 * GetCertificateChainResponse
 */
struct Logi__Device__Proto__GetCertificateChainRequest {
	ProtobufCMessage base;
	/*
	 **
	 * attestation challenge
	 */
	char *attestation;
	/*
	 **
	 * time to live
	 */
	int32_t ttl;
};
#define LOGI__DEVICE__PROTO__GET_CERTIFICATE_CHAIN_REQUEST__INIT                                   \
	{                                                                                          \
		PROTOBUF_C_MESSAGE_INIT(                                                           \
		    &logi__device__proto__get_certificate_chain_request__descriptor)               \
		, (char *)protobuf_c_empty_string, 0                                               \
	}

/*
 **
 * Get certificate chain response
 */
struct Logi__Device__Proto__GetCertificateChainResponse {
	ProtobufCMessage base;
	/*
	 **
	 * array of certs
	 */
	size_t n_certchain;
	char **certchain;
};
#define LOGI__DEVICE__PROTO__GET_CERTIFICATE_CHAIN_RESPONSE__INIT                                  \
	{                                                                                          \
		PROTOBUF_C_MESSAGE_INIT(                                                           \
		    &logi__device__proto__get_certificate_chain_response__descriptor)              \
		, 0, NULL                                                                          \
	}

/* Logi__Device__Proto__GetCertificateChainRequest methods */
void
logi__device__proto__get_certificate_chain_request__init(
    Logi__Device__Proto__GetCertificateChainRequest *message);
size_t
logi__device__proto__get_certificate_chain_request__get_packed_size(
    const Logi__Device__Proto__GetCertificateChainRequest *message);
size_t
logi__device__proto__get_certificate_chain_request__pack(
    const Logi__Device__Proto__GetCertificateChainRequest *message,
    uint8_t *out);
size_t
logi__device__proto__get_certificate_chain_request__pack_to_buffer(
    const Logi__Device__Proto__GetCertificateChainRequest *message,
    ProtobufCBuffer *buffer);
Logi__Device__Proto__GetCertificateChainRequest *
logi__device__proto__get_certificate_chain_request__unpack(ProtobufCAllocator *allocator,
							   size_t len,
							   const uint8_t *data);
void
logi__device__proto__get_certificate_chain_request__free_unpacked(
    Logi__Device__Proto__GetCertificateChainRequest *message,
    ProtobufCAllocator *allocator);
/* Logi__Device__Proto__GetCertificateChainResponse methods */
void
logi__device__proto__get_certificate_chain_response__init(
    Logi__Device__Proto__GetCertificateChainResponse *message);
size_t
logi__device__proto__get_certificate_chain_response__get_packed_size(
    const Logi__Device__Proto__GetCertificateChainResponse *message);
size_t
logi__device__proto__get_certificate_chain_response__pack(
    const Logi__Device__Proto__GetCertificateChainResponse *message,
    uint8_t *out);
size_t
logi__device__proto__get_certificate_chain_response__pack_to_buffer(
    const Logi__Device__Proto__GetCertificateChainResponse *message,
    ProtobufCBuffer *buffer);
Logi__Device__Proto__GetCertificateChainResponse *
logi__device__proto__get_certificate_chain_response__unpack(ProtobufCAllocator *allocator,
							    size_t len,
							    const uint8_t *data);
void
logi__device__proto__get_certificate_chain_response__free_unpacked(
    Logi__Device__Proto__GetCertificateChainResponse *message,
    ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Logi__Device__Proto__GetCertificateChainRequest_Closure)(
    const Logi__Device__Proto__GetCertificateChainRequest *message,
    void *closure_data);
typedef void (*Logi__Device__Proto__GetCertificateChainResponse_Closure)(
    const Logi__Device__Proto__GetCertificateChainResponse *message,
    void *closure_data);

/* --- services --- */

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor
    logi__device__proto__get_certificate_chain_request__descriptor;
extern const ProtobufCMessageDescriptor
    logi__device__proto__get_certificate_chain_response__descriptor;

PROTOBUF_C__END_DECLS

#endif /* PROTOBUF_C_device_5fattestation_2eproto__INCLUDED */
