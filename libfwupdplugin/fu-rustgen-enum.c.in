
{%- set export = obj.export('ToString') %}
{%- if export in [Export.PUBLIC, Export.PRIVATE] %}
{{export.value}}const gchar *
{{obj.c_method('ToString')}}({{obj.c_type}} val)
{
{%- for item in obj.items %}
    if (val == {{item.c_define}})
        return "{{item.value}}";
{%- endfor %}
    return NULL;
}
{%- endif %}

{%- set export = obj.export('ToBitString') %}
{%- if export in [Export.PUBLIC, Export.PRIVATE] %}
{{export.value}}gchar *
{{obj.c_method('ToString')}}({{obj.c_type}} val)
{
    const gchar *data[{{obj.items|length}}] = {0};
    guint idx = 0;
    if (val == {{obj.items[0].c_define}})
        return g_strdup("{{obj.items[0].value}}");
{%- for item in obj.items[1:] %}
    if (val & {{item.c_define}})
        data[idx++] = "{{item.value}}";
{%- endfor %}
    return g_strjoinv(",", (gchar **)data);
}
{%- endif %}

{%- set export = obj.export('FromString') %}
{%- if export in [Export.PUBLIC, Export.PRIVATE] %}
{{export.value}}{{obj.c_type}}
{{obj.c_method('FromString')}}(const gchar *val)
{
{%- for item in obj.items %}
    if (g_strcmp0(val, "{{item.value}}") == 0)
        return {{item.c_define}};
{%- endfor %}
    return {{obj.items[0].c_define}};
}
{%- endif %}
