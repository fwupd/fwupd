version: 2
jobs:
  build-ubuntu-x86_64:
    machine:
      image: ubuntu-2204:edge
    steps:
      - checkout
      - run:
          name: "Build container"
          command: OS=ubuntu-x86_64 ./contrib/ci/generate_docker.py build
      - run:
          name: "Run build script"
          command: docker run --privileged -e CI=true -t -v `pwd`:/github/workspace fwupd-ubuntu-x86_64
      - persist_to_workspace:
          root: .
          paths:
            - "dist/share/doc/fwupd"

  build-windows:
    docker:
      - image: fedora:35
    steps:
      - run:
          name: "Install deps"
          command: dnf install -y diffutils
                                  glib2-devel
                                  git-core
                                  gnutls-utils
                                  jq
                                  meson
                                  git
                                  gcc
                                  gcab
                                  gettext
                                  ca-certificates
                                  mingw32-nsis
                                  mingw64-brotli
                                  mingw64-gcc
                                  mingw64-pkg-config
                                  mingw64-glib2
                                  mingw64-gnutls
                                  mingw64-libusbx
                                  mingw64-sqlite
                                  mingw64-libarchive
                                  mingw64-json-glib
                                  mingw64-curl
                                  wine
      - checkout
      - run:
          name: "Build Win32"
          command: ./contrib/ci/build_windows.sh
      - persist_to_workspace:
          root: .
          paths:
            - "dist/setup/*.exe"
            - "dist/VERSION"
            - "dist/news.txt"
      - store_artifacts:
          path: dist/setup

  build-snap:
    docker:
      - image: ubuntu:18.04
    steps:
      - run:
          name: "Update apt"
          command: apt update
      - run:
          name: "install snapcraft"
          command: apt install snapcraft git -y
      - checkout
      - run:
          name: "Build Snap"
          command: snapcraft
      - run:
          command: |
            mkdir -p /tmp/snaps
            cp *.snap /tmp/snaps
      - store_artifacts:
          path: /tmp/snaps
      - persist_to_workspace:
          root: .
          paths:
            - "*.snap"

  publish-edge:
    docker:
      - image: cibuilds/snapcraft:stable
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Publish to Store"
          command: |
            mkdir .snapcraft
            echo $SNAPCRAFT_LOGIN_FILE | base64 --decode --ignore-garbage > .snapcraft/snapcraft.cfg
            snapcraft push *.snap --release edge

  publish-github-exe-release:
    docker:
      - image: circleci/golang:1.17.5
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=$(cat dist/VERSION)
            BODY=$(cat dist/news.txt)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "${BODY}" ${VERSION} ./dist/setup/
workflows:
  version: 2
  main:
    jobs:
      - build-windows
      - build-ubuntu-x86_64
      - build-snap
      - publish-edge:
          requires:
            - build-snap
          filters:
            branches:
              only: main
  deploy:
    jobs:
      - build-ubuntu-x86_64:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
      - build-windows:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
      - publish-github-exe-release:
          requires:
            - build-windows
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
      - build-snap:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
