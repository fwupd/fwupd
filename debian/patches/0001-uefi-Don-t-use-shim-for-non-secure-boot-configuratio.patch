From b09ee7ab3169d3f06050ccfc2c4b330db19d26c0 Mon Sep 17 00:00:00 2001
From: Mario Limonciello <mario.limonciello@dell.com>
Date: Sun, 15 Mar 2020 13:27:25 -0500
Subject: [PATCH] uefi: Don't use shim for non-secure boot configurations

Since the entry is dynamically created this removes one area that
can potentially cause failures.
Helps: #1794

Cherry-picked from 7b866e5f92e2249c9de52b4fcacaa79839aa5c97 with
slight modifications due to b87d48a042b64c068a2b1c10b91771f733a01d4f
not being included in 1_3_X branch.
---
 plugins/uefi/fu-uefi-bootmgr.c | 45 ++++++++++++++++++----------------
 1 file changed, 24 insertions(+), 21 deletions(-)

diff --git a/plugins/uefi/fu-uefi-bootmgr.c b/plugins/uefi/fu-uefi-bootmgr.c
index a14f647c..f6353b9c 100644
--- a/plugins/uefi/fu-uefi-bootmgr.c
+++ b/plugins/uefi/fu-uefi-bootmgr.c
@@ -280,7 +280,8 @@ fu_uefi_bootmgr_bootnext (const gchar *esp_path,
 			  GError **error)
 {
 	const gchar *filepath;
-	gboolean use_fwup_path = FALSE;
+	gboolean use_fwup_path = TRUE;
+	gboolean secure_boot = FALSE;
 	gsize loader_sz = 0;
 	gssize opt_size = 0;
 	gssize sz, dp_size = 0;
@@ -303,34 +304,36 @@ fu_uefi_bootmgr_bootnext (const gchar *esp_path,
 	if (source_app == NULL)
 		return FALSE;
 
-	/* test to make sure shim is there if we need it */
-	shim_app = fu_uefi_get_esp_app_path (esp_path, "shim", error);
-	if (shim_app == NULL)
-		return FALSE;
-	if (g_file_test (shim_app, G_FILE_TEST_EXISTS)) {
-		/* use a custom copy of shim for firmware updates */
-		if (flags & FU_UEFI_BOOTMGR_FLAG_USE_SHIM_UNIQUE) {
-			shim_cpy = fu_uefi_get_esp_app_path (esp_path, "shimfwupd", error);
-			if (shim_cpy == NULL)
-				return FALSE;
-			if (!fu_uefi_cmp_asset (shim_app, shim_cpy)) {
-				if (!fu_uefi_copy_asset (shim_app, shim_cpy, error))
+	/* test if we should use shim */
+	secure_boot = fu_uefi_secure_boot_enabled ();
+	if (secure_boot) {
+		/* test to make sure shim is there if we need it */
+		shim_app = fu_uefi_get_esp_app_path (esp_path, "shim", error);
+		if (shim_app == NULL)
+			return FALSE;
+
+		if (g_file_test (shim_app, G_FILE_TEST_EXISTS)) {
+			/* use a custom copy of shim for firmware updates */
+			if (flags & FU_UEFI_BOOTMGR_FLAG_USE_SHIM_UNIQUE) {
+				shim_cpy = fu_uefi_get_esp_app_path (esp_path, "shimfwupd", error);
+				if (shim_cpy == NULL)
 					return FALSE;
+				if (!fu_uefi_cmp_asset (shim_app, shim_cpy)) {
+					if (!fu_uefi_copy_asset (shim_app, shim_cpy, error))
+						return FALSE;
+				}
+				filepath = shim_cpy;
+			} else {
+				filepath = shim_app;
 			}
-			filepath = shim_cpy;
-		} else {
-			filepath = shim_app;
-		}
-	} else {
-		if (fu_uefi_secure_boot_enabled () &&
-		    (flags & FU_UEFI_BOOTMGR_FLAG_USE_SHIM_FOR_SB) > 0) {
+			use_fwup_path = FALSE;
+		} else if ((flags & FU_UEFI_BOOTMGR_FLAG_USE_SHIM_FOR_SB) > 0) {
 			g_set_error_literal (error,
 					     FWUPD_ERROR,
 					     FWUPD_ERROR_BROKEN_SYSTEM,
 					     "Secure boot is enabled, but shim isn't installed to the EFI system partition");
 			return FALSE;
 		}
-		use_fwup_path = TRUE;
 	}
 
 	/* test if correct asset in place */
-- 
2.25.1

